# user  nobody;
# worker_processes 4;
# worker_cpu_affinity 00000001 00000010 00000100 00001000;
# worker_rlimit_nofile 65535;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

error_log  /root/home/github/openresty_example/app/logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections 65535;
    multi_accept on;
    use epoll;
}

env BRIEF;

http {
    # include       mime.types;
    default_type  application/octet-stream;

    # See Move default writable paths to a dedicated directory (#119)
    # https://github.com/openresty/docker-openresty/issues/119
    # client_body_temp_path /var/run/openresty/nginx-client-body;
    # proxy_temp_path       /var/run/openresty/nginx-proxy;
    # fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
#uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;
#    scgi_temp_path        /var/run/openresty/nginx-scgi;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # include /etc/nginx/conf.d/*.conf;

    server {
        listen 8001;

        location / {
            charset utf-8;
#            default_type  'text/html;charset=utf8';

            lua_need_request_body on;

            content_by_lua_block {
                local unpack = unpack or table.unpack
                local data = ngx.req.get_body_data()
                if data then
                    local decode = require("cjson").decode
                    data = decode(data)
                    local opt = "/usr/bin/python3 /test.py '呵呵'"
                    local t = io.popen(opt)
                    local a = t:read("*all")
                    ngx.log(ngx.ERR, "opt: ", opt, " 执行结果: ", a)
                else
                    ngx.log(ngx.ERR, "cant get data!!!")
                end
            }
        }

        location /test {
            charset utf-8;
#            default_type  'text/html;charset=utf8';

            lua_need_request_body on;

            content_by_lua_block {
                local opt = "/usr/bin/python3 /test.py '呵呵'"
                local t = io.popen(opt)
                local a = t:read("*all")
                ngx.log(ngx.ERR, " 执行结果: ", a)
            }
        }

		server_name_in_redirect off;
		proxy_set_header Host $host:$server_port;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header REMOTE-HOST $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location /code {
            return 301 http://$host:8080;
        }

        location /rockmongo {
            return 301 http://$host:8090;
        }

        location /portainer {
            return 301 http://$host:9000;
        }
    }

    # Don't reveal OpenResty version to clients.
    # server_tokens off;
}
